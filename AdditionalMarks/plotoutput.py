# plotoutput.py
#
# Python script to plot the timing results of Merge Sort, Quick Sort, and Heap Sort
# based on data generated by automated testing (input.sh and SortsTest.py).
#
# Author: Saf Flatters
# Year: 2024


import matplotlib.pyplot as plt
import numpy as np

txttoplot = open('output.txt', 'r')
data = txttoplot.readlines()
txttoplot.close()


#distance

distmerge = np.array([])
distquick = np.array([])
distheap = np.array([])

#layovers

laymerge = np.array([])
layquick = np.array([])
layheap = np.array([])


for line in data:

    newline = line.strip('\n')
    newnewline = newline.split(' ')

# times for distance 
    if newnewline[0][1] == 'd':
    
        if newnewline[0][0] == 'm':
            distmerge = np.append(distmerge, float(newnewline[-1]))

        elif newnewline[0][0] == 'q':
            distquick = np.append(distquick, float(newnewline[-1]))

        elif newnewline[0][0] == 'h':
            distheap = np.append(distheap, float(newnewline[-1]))

# times for layovers

    elif newnewline[0][1] == 'l':
    
        if newnewline[0][0] == 'm':
            laymerge = np.append(laymerge, float(newnewline[-1]))

        elif newnewline[0][0] == 'q':
            layquick = np.append(layquick, float(newnewline[-1]))

        elif newnewline[0][0] == 'h':
            layheap = np.append(layheap, float(newnewline[-1]))


####make plots

plt.figure(figsize=(8, 8)) 


# Plotting random 
plt.subplot(211)
plt.plot(distmerge, label='Merge Sort', color='red')
plt.plot(distquick, label='Quick Sort', color='blue')
plt.plot(distheap, label='Heap Sort', color='green')
plt.title('Distance Sorting Algorithms (between 1 and 10000 km)')
plt.xlabel('No. of Route Options')
plt.ylabel('Mean Time')
plt.xticks([1, 2, 3, 4, 5], ["5000", "10000", "15000", "20000", "25000"])
plt.ylim(0, 0.5)                            #home laptop use 0.3. School computers use 0.5
plt.legend(loc='upper right')

# Plotting nearly 
plt.subplot(212)
plt.plot(laymerge, label='Merge Sort', color='red')
plt.plot(layquick, label='Quick Sort', color='blue')
plt.plot(layheap, label='Heap Sort', color='green')
plt.title('Layover Sorting Algorithms (between 1 and 10 layovers)')
plt.xlabel('No. of Route Options')
plt.ylabel('Mean Time')
plt.xticks([1, 2, 3, 4, 5], ["5000", "10000", "15000", "20000", "25000"])
plt.ylim(0, 0.5)                        #home laptop use 0.3. School computers use 0.5


# Display the plot
plt.suptitle('Sorting Algorithms for sorting by Layovers or Distance')
plt.tight_layout(rect=[0, 0, 1, 0.95])
plt.show()